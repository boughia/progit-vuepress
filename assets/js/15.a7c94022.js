(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{401:function(t,e,a){t.exports=a.p+"assets/img/replace1.f2a99082.png"},402:function(t,e,a){t.exports=a.p+"assets/img/replace2.8422f1be.png"},403:function(t,e,a){t.exports=a.p+"assets/img/replace3.ddbe2ed9.png"},404:function(t,e,a){t.exports=a.p+"assets/img/replace4.045aec3d.png"},405:function(t,e,a){t.exports=a.p+"assets/img/replace5.45a1532a.png"},534:function(t,e,a){"use strict";a.r(e);var s=a(28),c=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"替换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换"}},[t._v("#")]),t._v(" 替换")]),t._v(" "),s("p",[t._v("我们之前强调过，Git 对象数据库中的对象是不可改变的，\n然而 Git 提供了一种有趣的方式来用其他对象 "),s("strong",[t._v("假装")]),t._v(" 替换数据库中的 Git 对象。")]),t._v(" "),s("p",[s("code",{staticClass:"literal"},[t._v("replace")]),t._v(" 命令可以让你在 Git 中指定 "),s("strong",[t._v("某个对象")]),t._v(" 并告诉 Git：“每次遇到这个 Git 对象时，假装它是 "),s("strong",[t._v("其它对象")]),t._v("”。\n在你用一个不同的提交替换历史中的一个提交而不想以 "),s("code",{staticClass:"literal"},[t._v("git filter-branch")]),t._v(" 之类的方式重建完整的历史时，这会非常有用。")]),t._v(" "),s("p",[t._v("例如，你有一个大型的代码历史并想把自己的仓库分成一个短的历史和一个更大更长久的历史，\n短历史供新的开发者使用，后者给喜欢数据挖掘的人使用。\n你可以通过用新仓库中最早的提交“替换”老仓库中最新的提交来连接历史，这种方式可以把一条历史移植到其他历史上。\n这意味着你不用在新历史中真正替换每一个提交（因为历史来源会影响 SHA-1 值），你可以加入他们。")]),t._v(" "),s("p",[t._v("让我们来试试吧。\n首先获取一个已经存在的仓库，并将其分成两个仓库，一个是最近的仓库，一个是历史版本的仓库，\n然后我们将看到如何在不更改仓库 SHA-1 值的情况下通过 "),s("code",{staticClass:"literal"},[t._v("replace")]),t._v(" 命令来合并他们。")]),t._v(" "),s("p",[t._v("我们将使用一个拥有 5 个提交的简单仓库：")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git log --oneline\nef989d8 fifth commit\nc6e1e95 fourth commit\n9c68fdc third commit\n945704c second commit\nc1822cf first commit")])]),t._v(" "),s("p",[t._v("我们想将其分成拆分成两条历史。\n第一个到第四个提交的作为第一个历史版本。\n第四、第五个提交的作为最近的第二个历史版本。")]),t._v(" "),s("figure",{staticClass:"image"},[s("div",{staticClass:"content"},[s("img",{attrs:{src:a(401),alt:"replace1"}})])]),t._v(" "),s("p",[t._v("创建历史版本的历史很容易，我们可以只将一个历史中的分支推送到一个新的远程仓库的 "),s("code",{staticClass:"literal"},[t._v("master")]),t._v(" 分支。")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git branch history c6e1e95\n"),s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git log --oneline --decorate\nef989d8 (HEAD, master) fifth commit\nc6e1e95 (history) fourth commit\n9c68fdc third commit\n945704c second commit\nc1822cf first commit")])]),t._v(" "),s("figure",{staticClass:"image"},[s("div",{staticClass:"content"},[s("img",{attrs:{src:a(402),alt:"replace2"}})])]),t._v(" "),s("p",[t._v("现在我们可以把这个新的 "),s("code",{staticClass:"literal"},[t._v("history")]),t._v(" 分支推送到我们新仓库的 "),s("code",{staticClass:"literal"},[t._v("master")]),t._v(" 分支：")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git remote add project-history https://github.com/schacon/project-history\n"),s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git push project-history history:master\nCounting objects: 12, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (4/4), done.\nWriting objects: 100% (12/12), 907 bytes, done.\nTotal 12 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (12/12), done.\nTo git@github.com:schacon/project-history.git\n * [new branch]      history -> master")])]),t._v(" "),s("p",[t._v("这样一来，我们的历史版本就发布了。\n稍难的部分则是删减我们最近的历史来让它变得更小。\n我们需要一个重叠以便于用一个相等的提交来替换另一个提交，这样一来，我们将截断到第四、五个提交。")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git log --oneline --decorate\nef989d8 (HEAD, master) fifth commit\nc6e1e95 (history) fourth commit\n9c68fdc third commit\n945704c second commit\nc1822cf first commit")])]),t._v(" "),s("p",[t._v("在这种情况下，创建一个能够指导扩展历史的基础提交是很有用的。\n这样一来，如果其他的开发者想要修改第一次提交或者其他操作时就知道要做些什么，因此，接下来我们要做的是用命令创建一个最初的提交对象，然后将剩下的提交（第四、第五个提交）变基到它的上面。")]),t._v(" "),s("p",[t._v("为了这么做，我们需要选择一个点去拆分，对于我们而言是第三个提交（SHA 是 "),s("code",{staticClass:"literal"},[t._v("9c68fdc")]),t._v("）。\n因此我们的提交将基于此提交树。我们可以使用 "),s("code",{staticClass:"literal"},[t._v("commit-tree")]),t._v(" 命令来创建基础提交，\n这样我们就有了一个树，并返回一个全新的、无父节点的 SHA-1 提交对象。")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" echo "),s("span",{staticStyle:{"font-style":"italic"}},[t._v("'get history from blah blah blah'")]),t._v(" | git commit-tree 9c68fdc^{tree}\n622e88e9cbfbacfb75b5279245b9fb38dfea10cf")])]),t._v(" "),s("aside",{staticClass:"admonition note custom-block tip",attrs:{title:"Note","epub:type":"note"}},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("div",{staticClass:"content"},[s("p",[s("code",{staticClass:"literal"},[t._v("commit-tree")]),t._v(" 命令属于底层指令。有许多指令并非直接使用，而是被 "),s("strong",[t._v("其他的")]),t._v(" Git 命令用来做更小一些的工作。\n有时当我们做一些像这样的奇怪事情时，它们允许我们做一些不适用于日常使用但真正底层的东西。\n更多关于底层命令的内容请参见 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch10-git-internals--_plumbing_porcelain",href:"/chapter-10/1.html#底层命令与上层命令"}},[t._v("底层命令与上层命令")]),t._v("。")])])]),t._v(" "),s("figure",{staticClass:"image"},[s("div",{staticClass:"content"},[s("img",{attrs:{src:a(403),alt:"replace3"}})])]),t._v(" "),s("p",[t._v("现在我们已经有一个基础提交了，我们可以通过 "),s("code",{staticClass:"literal"},[t._v("git rebase --onto")]),t._v(" 命令来将剩余的历史变基到基础提交之上。\n"),s("code",{staticClass:"literal"},[t._v("--onto")]),t._v(" 参数是刚才 "),s("code",{staticClass:"literal"},[t._v("commit-tree")]),t._v(" 命令返回的 SHA-1 值，变基点会成为第三个提交（我们想留下的第一个提交的父提交，"),s("code",{staticClass:"literal"},[t._v("9c68fdc")]),t._v("）：")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git rebase --onto 622e88 9c68fdc\nFirst, rewinding head to replay your work on top of it...\nApplying: fourth commit\nApplying: fifth commit")])]),t._v(" "),s("figure",{staticClass:"image"},[s("div",{staticClass:"content"},[s("img",{attrs:{src:a(404),alt:"replace4"}})])]),t._v(" "),s("p",[t._v("我们已经用基础提交重写了最近的历史，基础提交包括如何重新组成整个历史的说明。\n我们可以将新历史推送到新项目中，当其他人克隆这个仓库时，他们仅能看到最近两次提交以及一个包含上述说明的基础提交。")]),t._v(" "),s("p",[t._v("现在我们将以想获得整个历史的人的身份来初次克隆这个项目。\n在克隆这个截断后的仓库后为了得到历史数据，需要添加第二个远程的历史版本库并对其做获取操作：")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git clone https://github.com/schacon/project\n"),s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" cd project\n\n"),s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git log --oneline master\ne146b5f fifth commit\n81a708d fourth commit\n622e88e get history from blah blah blah\n\n"),s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git remote add project-history https://github.com/schacon/project-history\n"),s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git fetch project-history\nFrom https://github.com/schacon/project-history\n * [new branch]      master     -> project-history/master")])]),t._v(" "),s("p",[t._v("现在，协作者在 "),s("code",{staticClass:"literal"},[t._v("master")]),t._v(" 分支中拥有他们最近的提交并且在 "),s("code",{staticClass:"literal"},[t._v("project-history/master")]),t._v(" 分支中拥有过去的提交。")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git log --oneline master\ne146b5f fifth commit\n81a708d fourth commit\n622e88e get history from blah blah blah\n\n"),s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git log --oneline project-history/master\nc6e1e95 fourth commit\n9c68fdc third commit\n945704c second commit\nc1822cf first commit")])]),t._v(" "),s("p",[t._v("为了合并它们，你可以使用 "),s("code",{staticClass:"literal"},[t._v("git replace")]),t._v(" 命令加上你想替换的提交信息来进行替换。\n这样一来，我们就可以将 "),s("code",{staticClass:"literal"},[t._v("master")]),t._v(" 分支中的第四个提交替换为 "),s("code",{staticClass:"literal"},[t._v("project-history/master")]),t._v(" 分支中的“第四个”提交。")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git replace 81a708d c6e1e95")])]),t._v(" "),s("p",[t._v("现在，查看 "),s("code",{staticClass:"literal"},[t._v("master")]),t._v(" 分支中的历史信息，显示如下：")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git log --oneline master\ne146b5f fifth commit\n81a708d fourth commit\n9c68fdc third commit\n945704c second commit\nc1822cf first commit")])]),t._v(" "),s("p",[t._v("很酷，是不是？不用改变上游的 SHA-1 我们就能用一个提交来替换历史中的所有不同的提交，\n并且所有的工具（"),s("code",{staticClass:"literal"},[t._v("bisect")]),t._v("，"),s("code",{staticClass:"literal"},[t._v("blame")]),t._v(" 等）也都奏效。")]),t._v(" "),s("figure",{staticClass:"image"},[s("div",{staticClass:"content"},[s("img",{attrs:{src:a(405),alt:"replace5"}})])]),t._v(" "),s("p",[t._v("有趣的是，即使是使用了 "),s("code",{staticClass:"literal"},[t._v("c6e1e95")]),t._v(" 提交数据来进行替换，它的 SHA-1 仍显示为 "),s("code",{staticClass:"literal"},[t._v("81a708d")]),t._v("。\n即使你运行了 "),s("code",{staticClass:"literal"},[t._v("cat-file")]),t._v(" 命令，它仍会显示你替换的数据：")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git cat-file -p 81a708d\ntree 7bc544cf438903b65ca9104a1e30345eee6c083d\nparent 9c68fdceee073230f19ebb8b5e7fc71b479c0252\nauthor Scott Chacon <schacon@gmail.com> 1268712581 -0700\ncommitter Scott Chacon <schacon@gmail.com> 1268712581 -0700\n\nfourth commit")])]),t._v(" "),s("p",[t._v("请记住，"),s("code",{staticClass:"literal"},[t._v("81a708d")]),t._v(" 真正的父提交是 "),s("code",{staticClass:"literal"},[t._v("622e882")]),t._v(" 占位提交，而非呈现的 "),s("code",{staticClass:"literal"},[t._v("9c68fdce")]),t._v(" 提交。")]),t._v(" "),s("p",[t._v("另一个有趣的事情是数据将会以以下引用显示：")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" git "),s("span",{staticStyle:{"font-weight":"bold"}},[t._v("for")]),t._v("-each-ref\ne146b5f14e79d4935160c0e83fb9ebe526b8da0d commit\trefs/heads/master\nc6e1e95051d41771a649f3145423f8809d1a74d4 commit\trefs/remotes/history/master\ne146b5f14e79d4935160c0e83fb9ebe526b8da0d commit\trefs/remotes/origin/HEAD\ne146b5f14e79d4935160c0e83fb9ebe526b8da0d commit\trefs/remotes/origin/master\nc6e1e95051d41771a649f3145423f8809d1a74d4 commit\trefs/replace/81a708dd0e167a3f691541c7a6463343bc457040")])]),t._v(" "),s("p",[t._v("这意味着我们可以轻而易举的和其他人分享替换，因为我们可以将替换推送到服务器中并且其他人可以轻松地下载。\n也许在历史移植情况下不是很有用（既然每个人都乐意下载最新版本和历史版本，为何还要拆分他们呢？），但在其他情况下仍然很有用。")])])}),[],!1,null,null,null);e.default=c.exports}}]);