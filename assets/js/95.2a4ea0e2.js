(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{513:function(t,a,s){"use strict";s.r(a);var e=s(28),i=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"smart-http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#smart-http"}},[t._v("#")]),t._v(" Smart HTTP")]),t._v(" "),s("p",[t._v("\n我们一般通过 SSH 进行授权访问，通过 git:// 进行无授权访问，但是还有一种协议可以同时实现以上两种方式的访问。\n设置 Smart HTTP 一般只需要在服务器上启用一个 Git 自带的名为 "),s("code",{staticClass:"literal"},[t._v("git-http-backend")]),t._v(" 的 CGI 脚本。\n该 CGI 脚本将会读取由 "),s("code",{staticClass:"literal"},[t._v("git fetch")]),t._v(" 或 "),s("code",{staticClass:"literal"},[t._v("git push")]),t._v(" 命令向 HTTP URL 发送的请求路径和头部信息，\n来判断该客户端是否支持 HTTP 通信（不低于 1.6.6 版本的客户端支持此特性）。\n如果 CGI 发现该客户端支持智能（Smart）模式，它将会以智能模式与它进行通信，\n否则它将会回落到哑（Dumb）模式下（因此它可以对某些老的客户端实现向下兼容）。")]),t._v(" "),s("p",[t._v("在完成以上简单的安装步骤后，\n我们将用 Apache 来作为 CGI 服务器。\n如果你没有安装 Apache，你可以在 Linux 环境下执行如下或类似的命令来安装：")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" sudo apt-get install apache2 apache2-utils\n"),s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" a2enmod cgi alias env")])]),t._v(" "),s("p",[t._v("该操作将会启用 "),s("code",{staticClass:"literal"},[t._v("mod_cgi")]),t._v("， "),s("code",{staticClass:"literal"},[t._v("mod_alias")]),t._v("， 和 "),s("code",{staticClass:"literal"},[t._v("mod_env")]),t._v(" 等 Apache 模块， 这些模块都是使该功能正常工作所必须的。")]),t._v(" "),s("p",[t._v("你还需要将 "),s("code",{staticClass:"literal"},[t._v("/srv/git")]),t._v(" 的 Unix 用户组设置为 "),s("code",{staticClass:"literal"},[t._v("www-data")]),t._v("，这样 Web 服务器才能读写该仓库，\n因为 运行 CGI 脚本的 Apache 实例默认会以该用户的权限运行：")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" chgrp -R www-data /srv/git")])]),t._v(" "),s("p",[t._v("接下来我们要向 Apache 配置文件添加一些内容，来让 "),s("code",{staticClass:"literal"},[t._v("git-http-backend")]),t._v(" 作为 Web 服务器对 "),s("code",{staticClass:"literal"},[t._v("/git")]),t._v(" 路径请求的处理器。")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[t._v("SetEnv GIT_PROJECT_ROOT /srv/git\nSetEnv GIT_HTTP_EXPORT_ALL\nScriptAlias /git/ /usr/lib/git-core/git-http-backend/")])]),t._v(" "),s("p",[t._v("如果留空 "),s("code",{staticClass:"literal"},[t._v("GIT_HTTP_EXPORT_ALL")]),t._v(" 这个环境变量，Git 将只对无授权客户端提供带 "),s("code",{staticClass:"literal"},[t._v("git-daemon-export-ok")]),t._v(" 文件的版本库，就像 Git 守护进程一样。")]),t._v(" "),s("p",[t._v("最后，如果想让 Apache 允许 "),s("code",{staticClass:"literal"},[t._v("git-http-backend")]),t._v(" 请求并实现写入操作的授权验证，使用如下授权屏蔽配置即可：")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[t._v('<Files "git-http-backend">\n    AuthType Basic\n    AuthName "Git Access"\n    AuthUserFile /srv/git/.htpasswd\n    Require expr !(%{QUERY_STRING} -strmatch \'*service=git-receive-pack*\' || %{REQUEST_URI} =~ m#/git-receive-pack$#)\n    Require valid-user\n</Files>')])]),t._v(" "),s("p",[t._v("这需要你创建一个包含所有合法用户密码的 "),s("code",{staticClass:"literal"},[t._v(".htpasswd")]),t._v(" 文件。\n以下是一个添加 “schacon” 用户到此文件的例子：")]),t._v(" "),s("pre",{staticClass:"language-bash"},[s("code",[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("$")]),t._v(" htpasswd -c /srv/git/.htpasswd schacon")])]),t._v(" "),s("p",[t._v("你可以通过许多方式添加 Apache 授权用户，选择使用其中一种方式即可。\n以上仅仅只是我们可以找到的最简单的一个例子。\n如果愿意的话，你也可以通过 SSL 运行它，以保证所有数据是在加密状态下进行传输的。")]),t._v(" "),s("p",[t._v("我们不想深入去讲解 Apache 配置文件，因为你可能会使用不同的 Web 服务器，或者可能有不同的授权需求。\n它的主要原理是使用一个 Git 附带的，名为 "),s("code",{staticClass:"literal"},[t._v("git-http-backend")]),t._v(" 的 CGI。它被引用来处理协商通过 HTTP 发送和接收的数据。\n它本身并不包含任何授权功能，但是授权功能可以在 Web 服务器层引用它时被轻松实现。\n你可以在任何所有可以处理 CGI 的 Web 服务器上办到这点，所以随便挑一个你最熟悉的 Web 服务器试手吧。")]),t._v(" "),s("aside",{staticClass:"admonition note custom-block tip",attrs:{title:"Note","epub:type":"note"}},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("div",{staticClass:"content"},[s("p",[t._v("欲了解更多的有关配置 Apache 授权访问的信息，请通过以下链接浏览 Apache 文档：\n"),s("a",{staticClass:"link",attrs:{href:"https://httpd.apache.org/docs/current/howto/auth.html"}},[t._v("https://httpd.apache.org/docs/current/howto/auth.html")])])])])])}),[],!1,null,null,null);a.default=i.exports}}]);