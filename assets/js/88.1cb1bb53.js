(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{506:function(t,i,s){"use strict";s.r(i);var n=s(28),e=Object(n.a)({},(function(){var t=this.$createElement,i=this._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[i("h1",{attrs:{id:"git-分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-分支"}},[this._v("#")]),this._v(" Git 分支")]),this._v(" "),i("p",[this._v("\n几乎所有的版本控制系统都以某种形式支持分支。\n使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。\n在很多版本控制系统中，这是一个略微低效的过程——常常需要完全创建一个源代码目录的副本。对于大项目来说，这样的过程会耗费很多时间。")]),this._v(" "),i("p",[this._v("有人把 Git 的分支模型称为它的“必杀技特性”，也正因为这一特性，使得 Git 从众多版本控制系统中脱颖而出。\n为何 Git 的分支模型如此出众呢？\nGit 处理分支的方式可谓是难以置信的轻量，创建新分支这一操作几乎能在瞬间完成，并且在不同分支之间的切换操作也是一样便捷。\n与许多其它版本控制系统不同，Git 鼓励在工作流程中频繁地使用分支与合并，哪怕一天之内进行许多次。\n理解和精通这一特性，你便会意识到 Git 是如此的强大而又独特，并且从此真正改变你的开发方式。")])])}),[],!1,null,null,null);i.default=e.exports}}]);