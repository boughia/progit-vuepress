(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{465:function(t,a,s){"use strict";s.r(a);var e=s(28),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"项目分享与更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目分享与更新"}},[t._v("#")]),t._v(" 项目分享与更新")]),t._v(" "),s("p",[t._v("在 Git 中没有多少访问网络的命令，几乎所以的命令都是在操作本地的数据库。\n当你想要分享你的工作，或者从其他地方拉取变更时，这有几个处理远程仓库的命令。")]),t._v(" "),s("h2",{attrs:{id:"git-fetch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch"}},[t._v("#")]),t._v(" git fetch")]),t._v(" "),s("p",[s("code",{staticClass:"literal"},[t._v("git fetch")]),t._v(" 命令与一个远程的仓库交互，并且将远程仓库中有但是在当前仓库的没有的所有信息拉取下来然后存储在你本地数据库中。")]),t._v(" "),s("p",[t._v("我们开始在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch02-git-basics-chapter--_fetching_and_pulling",href:"/chapter-2/5.html#从远程仓库中抓取与拉取"}},[t._v("从远程仓库中抓取与拉取")]),t._v(" 一节中介绍了此命令，然后我们在 "),s("a",{staticClass:"xref",attrs:{href:"/chapter-3/5.html#远程分支"}},[t._v("远程分支")]),t._v(" 中看到了几个使用示例。")]),t._v(" "),s("p",[t._v("我们在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch05-distributed-git--_contributing_project",href:"/chapter-5/2.html#向一个项目贡献"}},[t._v("向一个项目贡献")]),t._v(" 一节中有几个示例中也都有使用此命令。")]),t._v(" "),s("p",[t._v("在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch06-github--_pr_refs",href:"/chapter-6/3.html#合并请求引用"}},[t._v("合并请求引用")]),t._v(" 我们用它来抓取一个在默认空间之外指定的引用，在 "),s("a",{staticClass:"xref",attrs:{href:"/chapter-7/12.html#打包"}},[t._v("打包")]),t._v(" 中，我们了解了怎么从一个包中获取内容。")]),t._v(" "),s("p",[t._v("在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch10-git-internals--_refspec",href:"/chapter-10/5.html#引用规范"}},[t._v("引用规范")]),t._v(" 章节中我们设置了高度自定义的 "),s("code",{staticClass:"literal"},[t._v("refspec")]),t._v(" 以便 "),s("code",{staticClass:"literal"},[t._v("git fetch")]),t._v(" 可以做一些跟默认不同的事情。")]),t._v(" "),s("h2",{attrs:{id:"git-pull"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-pull"}},[t._v("#")]),t._v(" git pull")]),t._v(" "),s("p",[s("code",{staticClass:"literal"},[t._v("git pull")]),t._v(" 命令基本上就是 "),s("code",{staticClass:"literal"},[t._v("git fetch")]),t._v(" 和 "),s("code",{staticClass:"literal"},[t._v("git merge")]),t._v(" 命令的组合体，Git 从你指定的远程仓库中抓取内容，然后马上尝试将其合并进你所在的分支中。")]),t._v(" "),s("p",[t._v("我们在 "),s("a",{staticClass:"xref",attrs:{href:"/chapter-2/5.html#从远程仓库中抓取与拉取"}},[t._v("从远程仓库中抓取与拉取")]),t._v(" 一节中快速介绍了此命令，然后在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch02-git-basics-chapter--_inspecting_remote",href:"/chapter-2/5.html#查看某个远程仓库"}},[t._v("查看某个远程仓库")]),t._v(" 一节中了解了如果你运行此命令的话，什么将会合并。")]),t._v(" "),s("p",[t._v("我们也在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch03-git-branching--_rebase_rebase",href:"/chapter-3/6.html#用变基解决变基"}},[t._v("用变基解决变基")]),t._v(" 一节中了解了如何使用此命令来来处理变基的难题。")]),t._v(" "),s("p",[t._v("在 "),s("a",{staticClass:"xref",attrs:{href:"/chapter-7/8.html#检出冲突"}},[t._v("检出冲突")]),t._v(" 一节中我们展示了使用此命令如何通过一个 URL 来一次性的拉取变更。")]),t._v(" "),s("p",[t._v("最后，我们在 "),s("a",{staticClass:"xref",attrs:{href:"/chapter-7/4.html#签署工作_commits"}},[t._v("签署提交")]),t._v(" 一节中我们快速的介绍了你可以使用 "),s("code",{staticClass:"literal"},[t._v("--verify-signatures")]),t._v(" 选项来验证你正在拉取下来的经过 GPG 签名的提交。")]),t._v(" "),s("h2",{attrs:{id:"git-push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-push"}},[t._v("#")]),t._v(" git push")]),t._v(" "),s("p",[s("code",{staticClass:"literal"},[t._v("git push")]),t._v(" 命令用来与另一个仓库通信，计算你本地数据库与远程仓库的差异，然后将差异推送到另一个仓库中。\n它需要有另一个仓库的写权限，因此这通常是需要验证的。")]),t._v(" "),s("p",[t._v("我们开始在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch02-git-basics-chapter--_pushing_remotes",href:"/chapter-2/5.html#推送到远程仓库"}},[t._v("推送到远程仓库")]),t._v(" 一节中介绍了 "),s("code",{staticClass:"literal"},[t._v("git push")]),t._v(" 命令。\n在这一节中主要介绍了推送一个分支到远程仓库的基本用法。\n在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch03-git-branching--_pushing_branches",href:"/chapter-3/5.html#推送"}},[t._v("推送")]),t._v(" 一节中，我们深入了解了如何推送指定分支，在 "),s("a",{staticClass:"xref",attrs:{href:"/chapter-3/5.html#跟踪分支"}},[t._v("跟踪分支")]),t._v(" 一节中我们了解了如何设置一个默认的推送的跟踪分支。\n在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch03-git-branching--_delete_branches",href:"/chapter-3/5.html#删除远程分支"}},[t._v("删除远程分支")]),t._v(" 一节中我们使用 "),s("code",{staticClass:"literal"},[t._v("--delete")]),t._v(" 标志和 "),s("code",{staticClass:"literal"},[t._v("git push")]),t._v(" 命令来在删除一个在服务器上的分支。")]),t._v(" "),s("p",[t._v("在 "),s("a",{staticClass:"xref",attrs:{href:"/chapter-5/2.html#向一个项目贡献"}},[t._v("向一个项目贡献")]),t._v(" 一整节中，我们看到了几个使用 "),s("code",{staticClass:"literal"},[t._v("git push")]),t._v(" 在多个远程仓库分享分支中的工作的示例。")]),t._v(" "),s("p",[t._v("在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch02-git-basics-chapter--_sharing_tags",href:"/chapter-2/6.html#共享标签"}},[t._v("共享标签")]),t._v(" 一节中，我们知道了如何使用此命令加 "),s("code",{staticClass:"literal"},[t._v("--tags")]),t._v(" 选项来分享你打的标签。")]),t._v(" "),s("p",[t._v("在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch07-git-tools--_publishing_submodules",href:"/chapter-7/11.html#发布子模块改动"}},[t._v("发布子模块改动")]),t._v(" 一节中，我们使用 "),s("code",{staticClass:"literal"},[t._v("--recurse-submodules")]),t._v(" 选项来检查是否我们所有的子模块的工作都已经在推送子项目之前已经推送出去了，当使用子模块时这真的很有帮助。")]),t._v(" "),s("p",[t._v("在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch08-customizing-git--_other_client_hooks",href:"/chapter-8/3.html#其它客户端钩子"}},[t._v("其它客户端钩子")]),t._v(" 中我们简单的提到了 "),s("code",{staticClass:"literal"},[t._v("pre-push")]),t._v(" 挂钩（hook），它是一个可以用来设置成在一个推送完成之前运行的脚本，以检查推送是否被允许。")]),t._v(" "),s("p",[t._v("最后，在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch10-git-internals--_pushing_refspecs",href:"/chapter-10/5.html#引用规范推送"}},[t._v("引用规范推送")]),t._v(" 一节中，我们知道了使用完整的 refspec 来推送，而不是通常使用的简写形式。\n这对我们精确的指定要分享出去的工作很有帮助。")]),t._v(" "),s("h2",{attrs:{id:"git-remote"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-remote"}},[t._v("#")]),t._v(" git remote")]),t._v(" "),s("p",[s("code",{staticClass:"literal"},[t._v("git remote")]),t._v(" 命令是一个是你远程仓库记录的管理工具。\n它允许你将一个长的 URL 保存成一个简写的句柄，例如 "),s("code",{staticClass:"literal"},[t._v("origin")]),t._v(" ，这样你就可以不用每次都输入他们了。\n你可以有多个这样的句柄，"),s("code",{staticClass:"literal"},[t._v("git remote")]),t._v(" 可以用来添加，修改，及删除它们。")]),t._v(" "),s("p",[t._v("此命令在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch02-git-basics-chapter--_remote_repos",href:"/chapter-2/5.html#远程仓库的使用"}},[t._v("远程仓库的使用")]),t._v(" 一节中做了详细的介绍，包括列举、添加、移除、重命名功能。")]),t._v(" "),s("p",[t._v("几乎在此书的后续章节中都有使用此命令，但是一般是以 "),s("code",{staticClass:"literal"},[t._v("git remote add <name> <url>")]),t._v(" 这样的标准格式。")]),t._v(" "),s("h2",{attrs:{id:"git-archive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-archive"}},[t._v("#")]),t._v(" git archive")]),t._v(" "),s("p",[s("code",{staticClass:"literal"},[t._v("git archive")]),t._v(" 命令用来创建项目一个指定快照的归档文件。")]),t._v(" "),s("p",[t._v("我们在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch05-distributed-git--_preparing_release",href:"/chapter-5/3.html#准备一次发布"}},[t._v("准备一次发布")]),t._v(" 一节中，使用 "),s("code",{staticClass:"literal"},[t._v("git archive")]),t._v(" 命令来创建一个项目的归档文件用于分享。")]),t._v(" "),s("h2",{attrs:{id:"git-submodule"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-submodule"}},[t._v("#")]),t._v(" git submodule")]),t._v(" "),s("p",[s("code",{staticClass:"literal"},[t._v("git submodule")]),t._v(" 命令用来管理一个仓库的其他外部仓库。\n它可以被用在库或者其他类型的共享资源上。\n"),s("code",{staticClass:"literal"},[t._v("submodule")]),t._v(" 命令有几个子命令, 如（"),s("code",{staticClass:"literal"},[t._v("add")]),t._v("、"),s("code",{staticClass:"literal"},[t._v("update")]),t._v("、"),s("code",{staticClass:"literal"},[t._v("sync")]),t._v(" 等等）用来管理这些资源。")]),t._v(" "),s("p",[t._v("只在 "),s("a",{staticClass:"xref",attrs:{id:"xref--ch07-git-tools--_git_submodules",href:"/chapter-7/11.html#子模块"}},[t._v("子模块")]),t._v(" 章节中提到和详细介绍了此命令。")])])}),[],!1,null,null,null);a.default=r.exports}}]);