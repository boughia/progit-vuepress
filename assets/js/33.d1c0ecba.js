(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{259:function(e,t,s){e.exports=s.p+"assets/img/posh-git.97bb62dc.png"},450:function(e,t,s){"use strict";s.r(t);var o=s(28),l=Object(o.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"git-在-powershell-中使用-git"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#git-在-powershell-中使用-git"}},[e._v("#")]),e._v(" Git 在 PowerShell 中使用 Git")]),e._v(" "),o("p"),o("p",[e._v("Windows 中早期的命令行终端 "),o("code",{staticClass:"literal"},[e._v("cmd.exe")]),e._v(" 无法自定义 Git 使用体验，但是如果你正在使用 Powershell，那么你就十分幸运了。\n这种方法同样适用于 Linux 或 macOS 上运行的 PowerShell Core。\n一个名为 Posh-Git ("),o("a",{staticClass:"link",attrs:{href:"https://github.com/dahlbyk/posh-git"}},[e._v("https://github.com/dahlbyk/posh-git")]),e._v(") 的扩展包提供了强大的 tab 补全功能， 并针对提示符进行了增强，以帮助你聚焦于你的仓库状态。\n它看起来像：")]),e._v(" "),o("figure",{staticClass:"image"},[o("div",{staticClass:"content"},[o("img",{attrs:{src:s(259),alt:"附带了 Posh-Git 扩展包的 Powershell"}})]),e._v(" "),o("figcaption",[e._v("Figure 14. 附带了 Posh-Git 扩展包的 Powershell。")])]),o("p"),e._v(" "),o("h2",{attrs:{id:"安装"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),o("h3",{attrs:{id:"前提需求（仅限-windows）"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#前提需求（仅限-windows）"}},[e._v("#")]),e._v(" 前提需求（仅限 Windows）")]),e._v(" "),o("p",[e._v("在可以运行 PowerShell 脚本之前，你需要将本地的 ExecutionPolicy 设置为 RemoteSigned\n（可以说是允许除了 Undefined 和 Restricted 之外的任何内容）。如果你选择了 AllSigned\n而非 RemoteSigned，那么你的本地脚本还需要数字签名后才能执行。如果设置为 RemoteSigned，\n那么只有“ZoneIdentifier”设置为 Internet，即从 Web 上下载的脚本才需要签名，其它则不需要。\n如果你是管理员，想要为本机上的所有用户设置它，请使用“-Scope LocalMachine”。\n如果你是没有管理权限的普通用户，可使用“-Scope CurrentUser”来只为自己设置它。")]),e._v(" "),o("p",[e._v("有关 PowerShell Scopes 的更多详情： "),o("a",{staticClass:"link",attrs:{href:"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes"}},[e._v("https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes")])]),e._v(" "),o("p",[e._v("有关 PowerShell ExecutionPolicy 的更多详情： "),o("a",{staticClass:"link",attrs:{href:"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-executionpolicy"}},[e._v("https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-executionpolicy")])]),e._v(" "),o("pre",{staticClass:"source language-powershell"},[o("code",[e._v("> Set-ExecutionPolicy -Scope LocalMachine -ExecutionPolicy RemoteSigned -Force")])]),e._v(" "),o("h3",{attrs:{id:"powershell-gallery"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#powershell-gallery"}},[e._v("#")]),e._v(" PowerShell Gallery")]),e._v(" "),o("p",[e._v("如果你有 PowerShell 5 以上或安装了 PackageManagement 的 PowerShell 4，那么可以用包管理器来安装 posh-git。")]),e._v(" "),o("p",[e._v("有关 PowerShell Gallery 的更多详情： "),o("a",{staticClass:"link",attrs:{href:"https://docs.microsoft.com/en-us/powershell/gallery/overview"}},[e._v("https://docs.microsoft.com/en-us/powershell/gallery/overview")])]),e._v(" "),o("pre",{staticClass:"source language-powershell"},[o("code",[e._v("> Install-Module posh-git -Scope CurrentUser -Force\n> Install-Module posh-git -Scope CurrentUser -AllowPrerelease -Force "),o("span",{staticStyle:{"font-style":"italic"}},[e._v("# 带有 PowerShell Core 支持的更新的 beta 版")])])]),e._v(" "),o("p",[e._v("如果你想为所有的用户安装 posh-git，请使用“-Scope AllUsers”并在管理员权限启动的 PowerShell 控制台中执行。\n如果第二条命令执行失败并出现类似 "),o("code",{staticClass:"literal"},[e._v("Module 'PowerShellGet' was not installed by using Install-Module")]),e._v(" 这样的错误，\n那么你需要先运行另一条命令：")]),e._v(" "),o("pre",{staticClass:"source language-powershell"},[o("code",[e._v("> Install-Module PowerShellGet -Force -SkipPublisherCheck")])]),e._v(" "),o("p",[e._v("之后你可以再试一遍。出现这个错误的原因是 Windows PowerShell 搭载的模块是以不同的发布证书签名的。")]),e._v(" "),o("h3",{attrs:{id:"更新-powershell-提示符"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#更新-powershell-提示符"}},[e._v("#")]),e._v(" 更新 PowerShell 提示符")]),e._v(" "),o("p",[e._v("要在你的提示符中包含 Git 信息，那么需要导入 Posh-Git 模块。\n要让 PowerShell 在每次启动时都导入 Posh-Git，请执行 Add-PoshGitToProfile 命令，\n它会在你的 $profile 脚本中添加导入语句。此脚本会在每次打开新的 PowerShell 终端时执行。\n注意，存在多个 $profile 脚本。例如，其中一个是控制台的，另一个则属于 ISE。")]),e._v(" "),o("pre",{staticClass:"source language-powershell"},[o("code",[e._v("> Import-Module posh-git\n> Add-PoshGitToProfile -AllHosts")])]),e._v(" "),o("h3",{attrs:{id:"从源码安装"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#从源码安装"}},[e._v("#")]),e._v(" 从源码安装")]),e._v(" "),o("p",[e._v("只需从 ("),o("a",{staticClass:"link",attrs:{href:"https://github.com/dahlbyk/posh-git"}},[e._v("https://github.com/dahlbyk/posh-git")]),e._v(") 下载一份 Posh-Git 的发行版并解压即可。\n接着使用 posh-git.psd1 文件的完整路径导入此模块：")]),e._v(" "),o("pre",{staticClass:"source language-powershell"},[o("code",[e._v("> Import-Module <path-to-uncompress-folder>\\src\\posh-git.psd1\n> Add-PoshGitToProfile -AllHosts")])]),e._v(" "),o("p",[e._v("它将会向你的 "),o("code",{staticClass:"literal"},[e._v("profile.ps1")]),e._v(" 文件添加适当的内容，Posh-Git 将会在下次打开 PowerShell 时启用。\n命令提示符显示的 Git 状态信息的解释见： "),o("a",{staticClass:"link",attrs:{href:"https://github.com/dahlbyk/posh-git/blob/master/README.md#git-status-summary-information"}},[e._v("https://github.com/dahlbyk/posh-git/blob/master/README.md#git-status-summary-information")]),e._v("\n如何定制 Posh-Git 提示符的详情见： "),o("a",{staticClass:"link",attrs:{href:"https://github.com/dahlbyk/posh-git/blob/master/README.md#customization-variables"}},[e._v("https://github.com/dahlbyk/posh-git/blob/master/README.md#customization-variables")])])])}),[],!1,null,null,null);t.default=l.exports}}]);